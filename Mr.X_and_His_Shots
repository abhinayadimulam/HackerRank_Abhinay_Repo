'use strict';

const fs = require('fs');

process.stdin.resume();
process.stdin.setEncoding('utf-8');

let inputString = '';
let currentLine = 0;

process.stdin.on('data', inputStdin => {
    inputString += inputStdin;
});

process.stdin.on('end', _ => {
    inputString = inputString.trim().split('\n').map(str => str.trim());

    main();
});

function readLine() {
    return inputString[currentLine++];
}

// Complete the solve function below.
function solve(shots, players) {
    var startPos = 0;
    var found;
    var strengthCount = 0;
    if (shots.length > 0 && players.length > 0) {
        var sorter = function (o1, o2) {
            var result = o1[0] - o2[0];
            if (result == 0) {
                result = o1[1] - o2[1];
            }
            return result;
        };
        shots.sort(sorter);
        players.sort(sorter);
        var end3 = (players[players.length - 1][1]);
        for (var i = 0; i < players.length; i++) {
            var start1 = (players[i][0]);
            var end1 = (players[i][1]);
            if (i < players.length - 1) {
                end3 = (players[i + 1][1]);
            }
            found = false;
            for (var j = startPos; j < shots.length; j++) {
                var start2 = (shots[j][0]);
                var end2 = (shots[j][1]);

                if (start1 <= end2) {
                    if (end1 >= start2) {
                        if (!found && (end3 >= start2)) {
                            startPos = j;
                            found = true;
                        }
                        strengthCount++;
                    } else {
                        break;
                    }
                }
            }
        }
    }
    return strengthCount;
}


function main() {
    const ws = fs.createWriteStream(process.env.OUTPUT_PATH);

    const nm = readLine().split(' ');

    const n = parseInt(nm[0], 10);

    const m = parseInt(nm[1], 10);

    let shots = Array(n);

    for (let shotsRowItr = 0; shotsRowItr < n; shotsRowItr++) {
        shots[shotsRowItr] = readLine().split(' ').map(shotsTemp => parseInt(shotsTemp, 10));
    }

    let players = Array(m);

    for (let playersRowItr = 0; playersRowItr < m; playersRowItr++) {
        players[playersRowItr] = readLine().split(' ').map(playersTemp => parseInt(playersTemp, 10));
    }

    let result = solve(shots, players);

    ws.write(result + "\n");

    ws.end();
}
